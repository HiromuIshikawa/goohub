#!/usr/bin/env ruby

require "rubygems"

gemfile = File.expand_path("../../Gemfile", __FILE__)

if File.exists?(gemfile + ".lock")
  ENV["BUNDLE_GEMFILE"] = gemfile
  require "bundler/setup"
end

require 'googleauth'
require 'googleauth/stores/file_token_store'
require 'google/api_client/client_secrets'
require 'google/apis/calendar_v3'
require "clian"
require "goohub"
require 'goohub/command'

Clian::Cli.bundler_rbenv_setup(__FILE__)

Encoding.default_external="UTF-8"

class GoohubCLI < Clian::Cli
  package_name 'GOOHUB'

  Signal.trap(:INT){
    Thor.new.say "Interrupted quit.", :red
    exit(0)
  }

  private

  def setup_global_options
    begin
      @config = Goohub::Config.create_from_file(options[:config] ||
                                                CONFIG_PATH)
    rescue
      STDERR.print "ERROR: try goohub init command.\n"
      exit(1)
    end
  end

  def client
    begin
      @client ||= Goohub::Client.new(@config.general, "goohub")
    rescue Goohub::Client::AuthorizationError
      STDERR.print "ERROR: try goohub auth command.\n"
      exit(1)
    end
  end
end

GoohubCLI.start(ARGV)
